{"version":3,"sources":["component/LocationMarker.jsx","component/LocationInfoBox.jsx","component/Map.jsx","component/spinner.gif","component/Loader.jsx","component/Header.jsx","App.js","index.js"],"names":["LocationMarker","lat","lng","onClick","className","icon","locationIcon","LocationInfoBox","info","id","title","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","Loader","src","spinner","alt","Header","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAWeA,EARQ,SAAC,GAAsB,EAArBC,IAAqB,EAAjBC,IAAkB,IAAdC,EAAa,EAAbA,QAC/B,OACE,qBAAKC,UAAU,kBAAkBD,QAASA,EAA1C,SACE,cAAC,OAAD,CAAME,KAAMC,IAAcF,UAAU,qBCQ3BG,EAZS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACxB,OACE,sBAAKJ,UAAU,gBAAf,UACG,qDACA,+BACE,qCAAO,iCAASI,EAAKC,QACrB,wCAAU,iCAASD,EAAKE,kBCH3BC,EAAM,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,UAAUC,EAAiB,EAAjBA,OAAOC,EAAU,EAAVA,KAAU,EAEFC,mBAAS,MAFP,mBAEjCC,EAFiC,KAEpBC,EAFoB,KAIjCC,EAAQN,EAAUO,KAAI,SAAAC,GAC1B,OAA2B,IAAxBA,EAAGC,WAAW,GAAGZ,GACb,cAAC,EAAD,CAAgBR,IAAKmB,EAAGE,WAAW,GAAGC,YAAY,GAAIrB,IAAKkB,EAAGE,WAAW,GAAGC,YAAY,GAC/FpB,QAAS,kBAAIc,EAAgB,CAACR,GAAGW,EAAGX,GAAGC,MAAMU,EAAGV,WAEzC,QAET,OACG,sBAAKN,UAAU,MAAf,UACC,cAAC,IAAD,CACCoB,iBAAkB,CAAEC,IAAI,2CACzBC,cAAeb,EACfc,YAAab,EAHb,SAIEI,IAEDF,GAAgB,cAAC,EAAD,CAAiBR,KAAMQ,QAI9CL,EAAIiB,aAAa,CACff,OAAO,CACLZ,IAAI,QACJC,KAAK,UAEPY,KAAK,GAGQH,QCpCA,MAA0B,oCCW1BkB,EATA,WACb,OACE,sBAAKzB,UAAU,SAAf,UACE,qBAAK0B,IAAKC,EAASC,IAAI,YACvB,mDCMSC,G,MARA,WACb,OACE,wBAAQ7B,UAAU,SAAlB,SACG,+BAAI,cAAC,OAAD,CAAMC,KAAMC,MAAhB,6CCuBQ4B,MAxBf,WAAgB,IAAD,EACkBnB,mBAAS,IAD3B,mBACNH,EADM,KACIuB,EADJ,OAEcpB,oBAAS,GAFvB,mBAENqB,EAFM,KAEEC,EAFF,KAgBb,OAZAC,qBAAU,YACS,uCAAE,gCAAAC,EAAA,6DACjBF,GAAW,GADM,SAEAG,MAAM,mDAFN,cAEXC,EAFW,gBAGKA,EAAIC,OAHT,gBAGVC,EAHU,EAGVA,OAEPR,EAAaQ,GACbN,GAAW,GANM,4CAAF,qDASjBO,KACA,IAEA,gCACE,cAAC,EAAD,IACCR,EAAsC,cAAC,EAAD,IAA7B,cAAC,EAAD,CAAKxB,UAAWA,QCnBhCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7745d0aa.chunk.js","sourcesContent":["import {Icon} from '@iconify/react'\nimport locationIcon from \"@iconify/icons-mdi/fire-alert\"\n\nconst LocationMarker = ({lat,lng,onClick}) => {\n  return (\n    <div className=\"location-marker\" onClick={onClick}>\n      <Icon icon={locationIcon} className=\"location-icon\"/>\n    </div>\n  )\n}\n\nexport default LocationMarker\n","\n\nconst LocationInfoBox = ({info}) => {\n  return (\n    <div className=\"location-info\">\n       <h2>Event Location Info</h2>\n       <ul>\n         <li>ID:<strong>{info.id}</strong></li>\n         <li>Title:<strong>{info.title}</strong></li>\n       </ul>\n    </div>\n  )\n}\n\nexport default LocationInfoBox\n","import GoogleMapReact from 'google-map-react'\nimport LocationMarker from './LocationMarker'\nimport LocationInfoBox from './LocationInfoBox'\nimport  {useState} from 'react'\n\nconst Map = ({eventData,center,zoom}) => {\n\n  const[locationInfo,setLocationInfo]= useState(null)\n\n  const markers=eventData.map(ev=>{\n    if(ev.categories[0].id === 8){\n    return <LocationMarker lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]}\n    onClick={()=>setLocationInfo({id:ev.id,title:ev.title})}/>\n    }\n    return null\n  })\n  return (\n     <div className=\"map\">\n      <GoogleMapReact\n       bootstrapURLKeys={{ key:'AIzaSyCTTlxMVOo2xvJ5j4-D1f4CUYKdxtpkUWU' }}\n      defaultCenter={center}\n      defaultZoom={zoom}>\n       {markers}\n      </GoogleMapReact>\n      {locationInfo && <LocationInfoBox info={locationInfo}/>}\n      </div>\n  )\n}\nMap.defaultProps={\n  center:{\n    lat:42.3265,\n    lng:-122.8756\n  },\n  zoom:6\n}\n\nexport default Map\n","export default __webpack_public_path__ + \"static/media/spinner.ce09e4a2.gif\";","import spinner from './spinner.gif'\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <img src={spinner} alt='loading'/>\n      <h1>Fetching Data</h1>\n    </div>\n  )\n}\n\nexport default Loader\n","import {Icon} from '@iconify/react'\nimport locationIcon from \"@iconify/icons-mdi/fire-alert\"\n\n\nconst Header = () => {\n  return (\n    <header className=\"header\" >\n       <h1><Icon icon={locationIcon}/>Wildfire Tracker (Courtesy of NASA)</h1>\n    </header>\n  )\n}\n\nexport default Header\n","import Map from './component/Map'\nimport Loader from './component/Loader'\nimport './index.css';\nimport  {useState,useEffect} from 'react';\nimport Header from './component/Header'\n\nfunction App() {\n  const [eventData,setEventData]=useState([])\n  const [loading,setLoading]=useState(false)\n\n  useEffect(()=>{\n    const fetchEvents= async()=>{\n      setLoading(true)\n      const res= await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      const {events}= await res.json()\n      \n      setEventData(events)\n      setLoading(false)\n\n    }\n    fetchEvents()\n  },[])\n  return (\n    <div>\n      <Header/>\n     {!loading? <Map eventData={eventData}/>:<Loader/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}